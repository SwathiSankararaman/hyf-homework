{"ast":null,"code":"var _jsxFileName = \"/Users/swathiraghavan/Documents/HackYourFuture/React/Week4/HW/github_search/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; //import App from './App';\n\nimport searchContext from \"./context\";\nimport * as serviceWorker from './serviceWorker';\nconst root = document.getElementById('root');\n\nfunction Header() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"Github user searcher\"));\n}\n\nclass Searchbar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchTerm: '',\n      isLoading: true,\n      usersArray: []\n    };\n\n    this.handleSearchChange = event => {\n      const searchedValue = event.target.value;\n      this.setState({\n        searchTerm: searchedValue\n      });\n      this.fetchGithubUsers(this.state.searchTerm);\n    };\n  }\n\n  fetchGithubUsers(searchedUser) {\n    console.log(searchedUser);\n    fetch(`https://api.github.com/search/users?q=${searchedUser}`).then(response => response.json()).then(data => {\n      console.log(data);\n      console.log(data.items);\n      const usersFromApi = data.items.map(item => item.login);\n      console.log(usersFromApi);\n      this.setState({\n        usersArray: usersFromApi,\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for user\",\n      value: this.state.searchTerm,\n      onChange: this.handleSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Searchbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 17\n  }\n}), root); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/swathiraghavan/Documents/HackYourFuture/React/Week4/HW/github_search/src/index.js"],"names":["React","ReactDOM","searchContext","serviceWorker","root","document","getElementById","Header","Searchbar","Component","state","searchTerm","isLoading","usersArray","handleSearchChange","event","searchedValue","target","value","setState","fetchGithubUsers","searchedUser","console","log","fetch","then","response","json","data","items","usersFromApi","map","item","login","render","App","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CACA;;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;;AAEA,SAASC,MAAT,GAAkB;AAChB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF;AAKD;;AAED,MAAMC,SAAN,SAAwBR,KAAK,CAACS,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGNC,MAAAA,UAAU,EAAE;AAHN,KAD8B;;AAAA,SAwBtCC,kBAxBsC,GAwBhBC,KAAD,IAAW;AAC9B,YAAMC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAnC;AACA,WAAKC,QAAL,CAAc;AACZR,QAAAA,UAAU,EAAEK;AADA,OAAd;AAGA,WAAKI,gBAAL,CAAsB,KAAKV,KAAL,CAAWC,UAAjC;AACD,KA9BqC;AAAA;;AAOtCS,EAAAA,gBAAgB,CAACC,YAAD,EAAe;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACAG,IAAAA,KAAK,CAAE,yCAAwCH,YAAa,EAAvD,CAAL,CACGI,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACC,KAAjB;AAEA,YAAMC,YAAY,GAAGF,IAAI,CAACC,KAAL,CAAWE,GAAX,CAAeC,IAAI,IAAIA,IAAI,CAACC,KAA5B,CAArB;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYO,YAAZ;AACA,WAAKX,QAAL,CAAc;AACZN,QAAAA,UAAU,EAAEiB,YADA;AAEZlB,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KAZH;AAaD;;AAWDsB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,iBAA/B;AAAiD,MAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWC,UAAnE;AAA+E,MAAA,QAAQ,EAAE,KAAKG,kBAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAvCqC;;AA4CxC,SAASqB,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAKDlC,QAAQ,CAACiC,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyB9B,IAAzB,E,CAEA;AACA;AACA;;AACAD,aAAa,CAACiC,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport searchContext from \"./context\";\nimport * as serviceWorker from './serviceWorker';\n\nconst root = document.getElementById('root');\n\nfunction Header() {\n  return (\n    <div>\n      <h1>Github user searcher</h1>\n    </div>\n  )\n}\n\nclass Searchbar extends React.Component {\n  state = {\n    searchTerm: '',\n    isLoading: true,\n    usersArray: []\n  }\n\n  fetchGithubUsers(searchedUser) {\n    console.log(searchedUser);\n    fetch(`https://api.github.com/search/users?q=${searchedUser}`)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        console.log(data.items);\n        \n        const usersFromApi = data.items.map(item => item.login)\n        console.log(usersFromApi);\n        this.setState({\n          usersArray: usersFromApi,\n          isLoading: false\n        })\n      })   \n  }\n\n  handleSearchChange = (event) => {\n    const searchedValue = event.target.value\n    this.setState({\n      searchTerm: searchedValue\n    })\n    this.fetchGithubUsers(this.state.searchTerm)\n  }\n\n\n  render() {\n    return (\n      <div>\n        <input type='text' placeholder='Search for user' value={this.state.searchTerm} onChange={this.handleSearchChange} />\n      </div>\n    )\n  }\n}\n\n\n\nfunction App() {\n  return (\n    <div className='container'>\n      <Header />\n      <Searchbar />\n    </div>\n  )\n}\n\n\n\n\nReactDOM.render(<App />, root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}