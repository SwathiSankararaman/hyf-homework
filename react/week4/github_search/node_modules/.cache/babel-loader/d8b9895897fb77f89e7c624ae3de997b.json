{"ast":null,"code":"var _jsxFileName = \"/Users/swathiraghavan/Documents/HackYourFuture/React/Week4/HW/github_search/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; //import App from './App';\n\nimport searchContext from \"./context\";\nimport * as serviceWorker from './serviceWorker';\nconst root = document.getElementById('root');\n\nfunction fetchGithubUsers(query) {\n  const URL = `https://api.github.com/search/users?q=${query}`;\n  return fetch(URL).then(response => response.json());\n}\n\nfunction Header() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Github user searcher\"));\n}\n\nclass UserList extends React.Component {\n  render() {\n    return;\n  }\n\n}\n\nclass Searchbar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchTerm: '',\n      isLoading: false,\n      usersArray: []\n    };\n\n    this.handleSearchChange = event => {\n      const searchedValue = event.target.value;\n      this.setState({\n        searchTerm: searchedValue\n      });\n      this.fetchUsers();\n    };\n  }\n\n  fetchUsers() {\n    const query = this.state.searchTerm;\n    console.log(query);\n    fetchGithubUsers(query).then(data => console.log(data) //data.items.map(user => console.log(user.login))\n    );\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for user\",\n      value: this.state.searchTerm,\n      onChange: this.handleSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), this.state.isLoading ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    }, \"Loading...\") : this.state.usersArray.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 90\n      }\n    }, \"No Items\") : /*#__PURE__*/React.createElement(UserList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Searchbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 17\n  }\n}), root); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/swathiraghavan/Documents/HackYourFuture/React/Week4/HW/github_search/src/index.js"],"names":["React","ReactDOM","searchContext","serviceWorker","root","document","getElementById","fetchGithubUsers","query","URL","fetch","then","response","json","Header","UserList","Component","render","Searchbar","state","searchTerm","isLoading","usersArray","handleSearchChange","event","searchedValue","target","value","setState","fetchUsers","console","log","data","length","App","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport searchContext from \"./context\";\nimport * as serviceWorker from './serviceWorker';\n\nconst root = document.getElementById('root');\n\nfunction fetchGithubUsers(query) {\n  const URL = `https://api.github.com/search/users?q=${query}`\n  return fetch(URL).then(response => response.json())\n\n}\n\nfunction Header() {\n  return (\n    <div>\n      <h1>Github user searcher</h1>\n    </div>\n  )\n}\n\nclass UserList extends React.Component {\n  render() {\n    return\n  }\n}\n\nclass Searchbar extends React.Component {\n  state = {\n    searchTerm: '',\n    isLoading: false,\n    usersArray: []\n  }\n\n  fetchUsers() {\n    const query = this.state.searchTerm;\n    console.log(query);\n    fetchGithubUsers(query)\n      .then(data => console.log(data)\n      \n        //data.items.map(user => console.log(user.login))\n        )\n  }\n\n  handleSearchChange = (event) => {\n    const searchedValue = event.target.value\n    this.setState({\n      searchTerm: searchedValue\n    })\n    this.fetchUsers()\n  }\n\n  render() {\n    return (\n      <div>\n        <input type='text' placeholder='Search for user' value={this.state.searchTerm} onChange={this.handleSearchChange} />\n        {this.state.isLoading ? <p>Loading...</p> : this.state.usersArray.length === 0 ? <p>No Items</p>:\n          <UserList />\n        }\n      </div>\n    )\n  }\n}\n\n\n\nfunction App() {\n  return (\n    <div className='container'>\n      <Header />\n      <Searchbar />\n    </div>\n  )\n}\n\n\n\n\nReactDOM.render(<App />, root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}