{"ast":null,"code":"var _jsxFileName = \"/Users/swathiraghavan/Documents/HackYourFuture/React/Week4/HW/github_search/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; //import App from './App';\n\nimport searchContext from \"./context\";\nimport * as serviceWorker from './serviceWorker';\nconst root = document.getElementById('root'); //function fetchGithubUsers() {\n//return fetch(`https://api.github.com/search/users?q=${query}`)\n// .then(response => response.json())\n//}\n\nfunction Header() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Github user searcher\"));\n}\n\nclass Searchbar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchTerm: '',\n      isLoading: true\n    };\n  }\n\n  /*   componentDidMount() {\n      this.fetchGithubUsers()\n    }\n  \n    fetchGithubUsers() {\n      fetch(`https://api.github.com/search/users?q=${query}`)\n      .then(response => response.json())\n      .then(data => console.log(data))\n    }\n   */\n  handleSearchChange(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeHolder: \"Search for user\",\n      value: this.state.searchTerm,\n      onChange: this.handleSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Searchbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 17\n  }\n}), root); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/swathiraghavan/Documents/HackYourFuture/React/Week4/HW/github_search/src/index.js"],"names":["React","ReactDOM","searchContext","serviceWorker","root","document","getElementById","Header","Searchbar","Component","state","searchTerm","isLoading","handleSearchChange","event","setState","target","value","render","App","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CACA;;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb,C,CAEA;AACA;AACA;AACA;;AAEA,SAASC,MAAT,GAAkB;AAChB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF;AAKD;;AAED,MAAMC,SAAN,SAAwBR,KAAK,CAACS,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,SAAS,EAAE;AAFL,KAD8B;AAAA;;AAMxC;;;;;;;;;;AAUEC,EAAAA,kBAAkB,CAACC,KAAD,EAAQ;AACxB,SAAKC,QAAL,CAAc;AACZJ,MAAAA,UAAU,EAAEG,KAAK,CAACE,MAAN,CAAaC;AADb,KAAd;AAGD;;AAGDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAE,iBAAhC;AAAkD,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,UAApE;AAAgF,MAAA,QAAQ,EAAE,KAAKE,kBAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADF;AAKD;;AA7BqC;;AAkCxC,SAASM,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAKDlB,QAAQ,CAACiB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBd,IAAzB,E,CAEA;AACA;AACA;;AACAD,aAAa,CAACiB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport searchContext from \"./context\";\nimport * as serviceWorker from './serviceWorker';\n\nconst root = document.getElementById('root');\n\n//function fetchGithubUsers() {\n//return fetch(`https://api.github.com/search/users?q=${query}`)\n// .then(response => response.json())\n//}\n\nfunction Header() {\n  return (\n    <div>\n      <h1>Github user searcher</h1>\n    </div>\n  )\n}\n\nclass Searchbar extends React.Component {\n  state = {\n    searchTerm: '',\n    isLoading: true\n  }\n  \n/*   componentDidMount() {\n    this.fetchGithubUsers()\n  }\n\n  fetchGithubUsers() {\n    fetch(`https://api.github.com/search/users?q=${query}`)\n    .then(response => response.json())\n    .then(data => console.log(data))\n  }\n */\n  handleSearchChange(event) {\n    this.setState({\n      searchTerm: event.target.value\n    })\n  }\n\n\n  render() {\n    return (\n      <div>\n          <input type='text' placeHolder= 'Search for user' value={this.state.searchTerm} onChange={this.handleSearchChange} />\n      </div>\n    )\n  }\n}\n\n\n\nfunction App() {\n  return (\n    <div className='container'>\n      <Header />\n      <Searchbar />\n    </div>\n  )\n}\n\n\n\n\nReactDOM.render(<App />, root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}