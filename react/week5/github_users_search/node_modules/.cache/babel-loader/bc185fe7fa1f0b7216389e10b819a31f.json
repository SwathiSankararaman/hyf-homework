{"ast":null,"code":"var _jsxFileName = \"/Users/swathiraghavan/Documents/HackYourFuture/hyf-homework/react/week4/github_users_search/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; //import App from './App';\n\nimport searchContext from \"./context\";\nimport * as serviceWorker from './serviceWorker';\nconst root = document.getElementById('root');\nconst ContextProvider = searchContext.Provider;\n\nfunction fetchGithubUsers(query) {\n  if (query !== '') {\n    const URL = `https://api.github.com/search/users?q=${query}`;\n    return fetch(URL).then(response => response.json()).catch(error => error);\n  }\n}\n\nfunction Header() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Github user searcher\"));\n}\n\nclass UserList extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, this.props.user));\n  }\n\n}\n\nclass Searchbar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchTerm: '',\n      isLoading: false,\n      usersArray: [],\n      errorMessage: null\n    };\n\n    this.handleSearchChange = event => {\n      const searchedValue = event.target.value;\n      this.setState({\n        searchTerm: searchedValue\n      });\n\n      if (searchedValue !== '') {\n        fetchGithubUsers(searchedValue).then(data => {\n          const users = data.items.map(user => user.login);\n          console.log(users);\n          this.setState({\n            usersArray: users,\n            isLoading: true\n          });\n        }).catch(error => {\n          this.setState({\n            errorMessage: error\n          });\n        }).finally(() => this.setState({\n          isLoading: false\n        }));\n      }\n    };\n  }\n\n  render() {\n    const contextValue = {\n      searchTerm: this.state.searchTerm,\n      loadingTerm: this.state.isLoading,\n      usersArray: this.state.usersArray,\n      handleChange: this.handleSearchChange\n    };\n    const {\n      searchTerm\n    } = React.useContext(searchContext);\n    const {\n      loadingTerm\n    } = React.useContext(searchContext);\n    const {\n      handleChange\n    } = React.useContext(searchContext);\n    const {\n      usersArray\n    } = React.useContext(searchContext);\n    return /*#__PURE__*/React.createElement(ContextProvider, {\n      value: contextValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for user\",\n      value: searchTerm,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), loadingTerm ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 26\n      }\n    }, \"Loading...\") : this.state.usersArray.length === 0 || this.state.searchTerm === '' ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 117\n      }\n    }, \"No results\") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, this.state.usersArray.map((user, index) => /*#__PURE__*/React.createElement(UserList, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Searchbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 17\n  }\n}), root); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/swathiraghavan/Documents/HackYourFuture/hyf-homework/react/week4/github_users_search/src/index.js"],"names":["React","ReactDOM","searchContext","serviceWorker","root","document","getElementById","ContextProvider","Provider","fetchGithubUsers","query","URL","fetch","then","response","json","catch","error","Header","UserList","Component","render","props","user","Searchbar","state","searchTerm","isLoading","usersArray","errorMessage","handleSearchChange","event","searchedValue","target","value","setState","data","users","items","map","login","console","log","finally","contextValue","loadingTerm","handleChange","useContext","length","index","App","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport searchContext from \"./context\";\nimport * as serviceWorker from './serviceWorker';\n\nconst root = document.getElementById('root');\nconst ContextProvider = searchContext.Provider;\n\nfunction fetchGithubUsers(query) {\n  if (query !== '') {\n    const URL = `https://api.github.com/search/users?q=${query}`\n    return fetch(URL).then(response => response.json())\n      .catch(error => error);\n  }\n\n}\n\nfunction Header() {\n  return (\n    <div>\n      <h1>Github user searcher</h1>\n    </div>\n  )\n}\n\nclass UserList extends React.Component {\n  render() {\n    return (\n      <div>\n        <li className='list'>{this.props.user}</li>\n      </div>\n    )\n  }\n}\n\nclass Searchbar extends React.Component {\n  state = {\n    searchTerm: '',\n    isLoading: false,\n    usersArray: [],\n    errorMessage: null\n  }\n\n  handleSearchChange = (event) => {\n    const searchedValue = event.target.value\n    this.setState({\n      searchTerm: searchedValue\n    })\n    if (searchedValue !== '') {\n      fetchGithubUsers(searchedValue)\n        .then(data => {\n          const users = data.items.map(user => user.login)\n          console.log(users);\n          this.setState({\n            usersArray: users,\n            isLoading: true\n          })\n        }).catch(error => {\n          this.setState({ errorMessage: error })\n        }).finally(() => this.setState({ isLoading: false }))\n    }\n  }\n\n  render() {\n    const contextValue = {\n        searchTerm: this.state.searchTerm,\n        loadingTerm: this.state.isLoading,\n        usersArray: this.state.usersArray,\n        handleChange: this.handleSearchChange\n    }\n    const {searchTerm} = React.useContext(searchContext);\n    const {loadingTerm} = React.useContext(searchContext);\n    const {handleChange} = React.useContext(searchContext);\n    const {usersArray} = React.useContext(searchContext);\n\n    return (\n      <ContextProvider value={contextValue}>\n      <div>\n          <input type='text' placeholder='Search for user' value={searchTerm} onChange={handleChange} />\n          {loadingTerm ? <p>Loading...</p> : (this.state.usersArray.length === 0 || this.state.searchTerm === '') ? <p>No results</p> :\n            <div>\n              <ul>\n                {this.state.usersArray.map((user, index) => (\n                  <UserList user={user} />\n                ))}\n              </ul>\n            </div>\n          }\n      </div>\n      </ContextProvider>\n    )\n  }\n}\n\nfunction App() {\n  return (\n    <div className='container'>\n      <Header />\n      <Searchbar />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}