{"ast":null,"code":"var _jsxFileName = \"/Users/swathiraghavan/Documents/HackYourFuture/hyf-homework/react/week4/github_users_search/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; //import App from './App';\n\nimport searchContext from \"./context\";\nimport * as serviceWorker from './serviceWorker';\nconst root = document.getElementById('root');\nconst ContextProvider = searchContext.Provider;\n\nfunction fetchGithubUsers(query) {\n  if (query !== '') {\n    var myHeaders = new Headers();\n    myHeaders.append(\"User-Agent\", \"vaghul\"); //myHeaders.append(\"Access-Control-Allow-Origin\", \"*\");\n    // myHeaders.append(\"Access-Control-Allow-Headers\", \"Authorization, Content-Type, If-Match, If-Modified-Since, If-None-Match, If-Unmodified-Since, X-GitHub-OTP, X-Requested-With\");\n    //myHeaders.append(\"Access-Control-Allow-Methods\", \"GET, POST, PATCH, PUT, DELETE\");\n    // myHeaders.append(\"Access-Control-Expose-Headers\", \"ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval\");\n    //myHeaders.append(\"Access-Control-Max-Age\", \"86400\");\n    // myHeaders.append(\"Origin\", \"http://localhost:3000\");\n\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n    return fetch(`https://api.github.com/search/users?q=${query}`, requestOptions).then(response => response.json()).catch(error => error);\n  } //const URL = `https://api.github.com/search/users?q=${query}`\n  //return fetch(URL).then(response => response.json())\n\n}\n\nfunction Header() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Github user searcher\"));\n}\n\nclass UserList extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, this.props.user));\n  }\n\n}\n\nclass Searchbar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchTerm: '',\n      isLoading: false,\n      usersArray: []\n    };\n\n    this.handleSearchChange = event => {\n      const searchedValue = event.target.value;\n      this.setState({\n        searchTerm: searchedValue\n      });\n\n      if (searchedValue !== '') {\n        fetchGithubUsers(searchedValue).then(data => {\n          const users = data.items.map(user => user.login);\n          console.log(users);\n          this.setState({\n            usersArray: users,\n            isLoading: true\n          });\n        }).catch(error => {\n          console.log(\"ERROR\");\n          console.log(error);\n        }).finally(() => this.setState({\n          isLoading: false\n        }));\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ContextProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for user\",\n      value: this.state.searchTerm,\n      onChange: this.handleSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }), this.state.isLoading ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 35\n      }\n    }, \"Loading...\") : this.state.usersArray.length === 0 || this.state.searchTerm === '' ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 126\n      }\n    }, \"No results\") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, this.state.usersArray.map(user => /*#__PURE__*/React.createElement(UserList, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Searchbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 17\n  }\n}), root); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/swathiraghavan/Documents/HackYourFuture/hyf-homework/react/week4/github_users_search/src/index.js"],"names":["React","ReactDOM","searchContext","serviceWorker","root","document","getElementById","ContextProvider","Provider","fetchGithubUsers","query","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","then","response","json","catch","error","Header","UserList","Component","render","props","user","Searchbar","state","searchTerm","isLoading","usersArray","handleSearchChange","event","searchedValue","target","value","setState","data","users","items","map","login","console","log","finally","length","App","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport searchContext from \"./context\";\nimport * as serviceWorker from './serviceWorker';\n\nconst root = document.getElementById('root');\nconst ContextProvider = searchContext.Provider;\n\nfunction fetchGithubUsers(query) {\n  if (query !== '') {\n    var myHeaders = new Headers();\n    myHeaders.append(\"User-Agent\", \"vaghul\");\n    //myHeaders.append(\"Access-Control-Allow-Origin\", \"*\");\n   // myHeaders.append(\"Access-Control-Allow-Headers\", \"Authorization, Content-Type, If-Match, If-Modified-Since, If-None-Match, If-Unmodified-Since, X-GitHub-OTP, X-Requested-With\");\n    //myHeaders.append(\"Access-Control-Allow-Methods\", \"GET, POST, PATCH, PUT, DELETE\");\n   // myHeaders.append(\"Access-Control-Expose-Headers\", \"ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval\");\n    //myHeaders.append(\"Access-Control-Max-Age\", \"86400\");\n   // myHeaders.append(\"Origin\", \"http://localhost:3000\");\n\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n\n    return fetch(`https://api.github.com/search/users?q=${query}`, requestOptions)\n      .then(response => response.json())\n      .catch(error => error);\n  }\n  //const URL = `https://api.github.com/search/users?q=${query}`\n  //return fetch(URL).then(response => response.json())\n}\n\nfunction Header() {\n  return (\n    <div>\n      <h1>Github user searcher</h1>\n    </div>\n  )\n}\n\nclass UserList extends React.Component {\n  render() {\n    return (\n      <div>\n        <li className='list'>{this.props.user}</li>\n      </div>\n    )\n  }\n}\n\nclass Searchbar extends React.Component {\n  state = {\n    searchTerm: '',\n    isLoading: false,\n    usersArray: []\n  }\n\n  handleSearchChange = (event) => {\n    const searchedValue = event.target.value\n    this.setState({\n      searchTerm: searchedValue\n    })\nif(searchedValue!== ''){\n    fetchGithubUsers(searchedValue)\n      .then(data => {\n        const users = data.items.map(user => user.login)\n        console.log(users);\n        this.setState({\n          usersArray: users,\n          isLoading: true\n        })\n      }).catch(error => {\n        console.log(\"ERROR\")\n        console.log(error)\n      }).finally(() => this.setState({ isLoading: false }))\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <ContextProvider>\n          <input type='text' placeholder='Search for user' value={this.state.searchTerm} onChange={this.handleSearchChange} />\n          {this.state.isLoading ? <p>Loading...</p> : (this.state.usersArray.length === 0 || this.state.searchTerm === '') ? <p>No results</p> :\n            <div>\n              <ul>\n                {this.state.usersArray.map(user => (\n                  <UserList user={user} />\n                ))}\n              </ul>\n            </div>\n          }\n        </ContextProvider>\n      </div>\n    )\n  }\n}\n\nfunction App() {\n  return (\n    <div className='container'>\n      <Header />\n      <Searchbar />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}